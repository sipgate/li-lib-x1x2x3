//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5
// See https://eclipse-ee4j.github.io/jaxb-ri
// Any modifications to this file will be lost upon recompilation of the source schema.
//

package org.etsi.uri._03221.x1._2017._10;

import com.kscs.util.jaxb.Buildable;
import com.kscs.util.jaxb.Copyable;
import com.kscs.util.jaxb.PropertyTree;
import com.kscs.util.jaxb.PropertyTreeUse;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlType;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * <p>Java class for ListOfDestinationResponseDetails complex type</p>.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 *
 * <pre>{@code
 * <complexType name="ListOfDestinationResponseDetails">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="destinationResponseDetails" type="{http://uri.etsi.org/03221/X1/2017/10}DestinationResponseDetails" maxOccurs="unbounded" minOccurs="0"/>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ListOfDestinationResponseDetails", propOrder = { "destinationResponseDetails" })
public class ListOfDestinationResponseDetails implements Copyable {

  protected List<DestinationResponseDetails> destinationResponseDetails;

  /**
   * Generated by copy-constructor plugin, JAXB requires public no-arg constructor.
   *
   */
  public ListOfDestinationResponseDetails() {
    // Generated by copy-constructor plugin, JAXB requires public no-arg constructor.
  }

  /**
   * Instantiates a ListOfDestinationResponseDetails copying the state of another ListOfDestinationResponseDetails
   *
   * @param _other
   *     The original ListOfDestinationResponseDetails from which to copy state.
   */
  public ListOfDestinationResponseDetails(final ListOfDestinationResponseDetails _other) {
    if (_other.destinationResponseDetails == null) {
      this.destinationResponseDetails = null;
    } else {
      this.destinationResponseDetails = new ArrayList<>();
      for (DestinationResponseDetails _item : _other.destinationResponseDetails) {
        this.destinationResponseDetails.add(((_item == null) ? null : _item.createCopy()));
      }
    }
  }

  /**
   * Gets the value of the destinationResponseDetails property.
   *
   * <p>This accessor method returns a reference to the live list,
   * not a snapshot. Therefore any modification you make to the
   * returned list will be present inside the JAXB object.
   * This is why there is not a <CODE>set</CODE> method for the destinationResponseDetails property.</p>
   *
   * <p>
   * For example, to add a new item, do as follows:
   * </p>
   * <pre>
   * getDestinationResponseDetails().add(newItem);
   * </pre>
   *
   *
   * <p>
   * Objects of the following type(s) are allowed in the list
   * {@link DestinationResponseDetails }
   * </p>
   *
   *
   * @return
   *     The value of the destinationResponseDetails property.
   */
  public List<DestinationResponseDetails> getDestinationResponseDetails() {
    if (destinationResponseDetails == null) {
      destinationResponseDetails = new ArrayList<>();
    }
    return this.destinationResponseDetails;
  }

  @Override
  public ListOfDestinationResponseDetails createCopy() {
    final ListOfDestinationResponseDetails _newObject;
    try {
      _newObject = ((ListOfDestinationResponseDetails) super.clone());
    } catch (CloneNotSupportedException e) {
      throw new RuntimeException(e);
    }
    if (this.destinationResponseDetails == null) {
      _newObject.destinationResponseDetails = null;
    } else {
      _newObject.destinationResponseDetails = new ArrayList<>();
      for (DestinationResponseDetails _item : this.destinationResponseDetails) {
        _newObject.destinationResponseDetails.add(((_item == null) ? null : _item.createCopy()));
      }
    }
    return _newObject;
  }

  /**
   * Copies all state of this object to a builder. This method is used by the copyOf
   * method and should not be called directly by client code.
   *
   * @param _other
   *     A builder instance to which the state of this object will be copied.
   */
  public <_B> void copyTo(final ListOfDestinationResponseDetails.Builder<_B> _other) {
    if (this.destinationResponseDetails == null) {
      _other.destinationResponseDetails = null;
    } else {
      _other.destinationResponseDetails = new ArrayList<>();
      for (DestinationResponseDetails _item : this.destinationResponseDetails) {
        _other.destinationResponseDetails.add(((_item == null) ? null : _item.newCopyBuilder(_other)));
      }
    }
  }

  public <_B> ListOfDestinationResponseDetails.Builder<_B> newCopyBuilder(final _B _parentBuilder) {
    return new ListOfDestinationResponseDetails.Builder<_B>(_parentBuilder, this, true);
  }

  public ListOfDestinationResponseDetails.Builder<Void> newCopyBuilder() {
    return newCopyBuilder(null);
  }

  public static ListOfDestinationResponseDetails.Builder<Void> builder() {
    return new ListOfDestinationResponseDetails.Builder<>(null, null, false);
  }

  public static <_B> ListOfDestinationResponseDetails.Builder<_B> copyOf(
    final ListOfDestinationResponseDetails _other
  ) {
    final ListOfDestinationResponseDetails.Builder<_B> _newBuilder = new ListOfDestinationResponseDetails.Builder<>(
      null,
      null,
      false
    );
    _other.copyTo(_newBuilder);
    return _newBuilder;
  }

  /**
   * Copies all state of this object to a builder. This method is used by the copyOf
   * method and should not be called directly by client code.
   *
   * @param _other
   *     A builder instance to which the state of this object will be copied.
   */
  public <_B> void copyTo(
    final ListOfDestinationResponseDetails.Builder<_B> _other,
    final PropertyTree _propertyTree,
    final PropertyTreeUse _propertyTreeUse
  ) {
    final PropertyTree destinationResponseDetailsPropertyTree =
      ((_propertyTree == null) ? null : _propertyTree.get("destinationResponseDetails"));
    if (
      ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
          ? (destinationResponseDetailsPropertyTree != null)
          : ((destinationResponseDetailsPropertyTree == null) || (!destinationResponseDetailsPropertyTree.isLeaf())))
    ) {
      if (this.destinationResponseDetails == null) {
        _other.destinationResponseDetails = null;
      } else {
        _other.destinationResponseDetails = new ArrayList<>();
        for (DestinationResponseDetails _item : this.destinationResponseDetails) {
          _other.destinationResponseDetails.add(
            ((_item == null)
                ? null
                : _item.newCopyBuilder(_other, destinationResponseDetailsPropertyTree, _propertyTreeUse))
          );
        }
      }
    }
  }

  public <_B> ListOfDestinationResponseDetails.Builder<_B> newCopyBuilder(
    final _B _parentBuilder,
    final PropertyTree _propertyTree,
    final PropertyTreeUse _propertyTreeUse
  ) {
    return new ListOfDestinationResponseDetails.Builder<_B>(
      _parentBuilder,
      this,
      true,
      _propertyTree,
      _propertyTreeUse
    );
  }

  public ListOfDestinationResponseDetails.Builder<Void> newCopyBuilder(
    final PropertyTree _propertyTree,
    final PropertyTreeUse _propertyTreeUse
  ) {
    return newCopyBuilder(null, _propertyTree, _propertyTreeUse);
  }

  public static <_B> ListOfDestinationResponseDetails.Builder<_B> copyOf(
    final ListOfDestinationResponseDetails _other,
    final PropertyTree _propertyTree,
    final PropertyTreeUse _propertyTreeUse
  ) {
    final ListOfDestinationResponseDetails.Builder<_B> _newBuilder = new ListOfDestinationResponseDetails.Builder<>(
      null,
      null,
      false
    );
    _other.copyTo(_newBuilder, _propertyTree, _propertyTreeUse);
    return _newBuilder;
  }

  public static ListOfDestinationResponseDetails.Builder<Void> copyExcept(
    final ListOfDestinationResponseDetails _other,
    final PropertyTree _propertyTree
  ) {
    return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
  }

  public static ListOfDestinationResponseDetails.Builder<Void> copyOnly(
    final ListOfDestinationResponseDetails _other,
    final PropertyTree _propertyTree
  ) {
    return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
  }

  public static class Builder<_B> implements Buildable {

    protected final _B _parentBuilder;
    protected final ListOfDestinationResponseDetails _storedValue;
    private List<
      DestinationResponseDetails.Builder<ListOfDestinationResponseDetails.Builder<_B>>
    > destinationResponseDetails;

    public Builder(final _B _parentBuilder, final ListOfDestinationResponseDetails _other, final boolean _copy) {
      this._parentBuilder = _parentBuilder;
      if (_other != null) {
        if (_copy) {
          _storedValue = null;
          if (_other.destinationResponseDetails == null) {
            this.destinationResponseDetails = null;
          } else {
            this.destinationResponseDetails = new ArrayList<>();
            for (DestinationResponseDetails _item : _other.destinationResponseDetails) {
              this.destinationResponseDetails.add(((_item == null) ? null : _item.newCopyBuilder(this)));
            }
          }
        } else {
          _storedValue = _other;
        }
      } else {
        _storedValue = null;
      }
    }

    public Builder(
      final _B _parentBuilder,
      final ListOfDestinationResponseDetails _other,
      final boolean _copy,
      final PropertyTree _propertyTree,
      final PropertyTreeUse _propertyTreeUse
    ) {
      this._parentBuilder = _parentBuilder;
      if (_other != null) {
        if (_copy) {
          _storedValue = null;
          final PropertyTree destinationResponseDetailsPropertyTree =
            ((_propertyTree == null) ? null : _propertyTree.get("destinationResponseDetails"));
          if (
            ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
                ? (destinationResponseDetailsPropertyTree != null)
                : ((destinationResponseDetailsPropertyTree == null) ||
                  (!destinationResponseDetailsPropertyTree.isLeaf())))
          ) {
            if (_other.destinationResponseDetails == null) {
              this.destinationResponseDetails = null;
            } else {
              this.destinationResponseDetails = new ArrayList<>();
              for (DestinationResponseDetails _item : _other.destinationResponseDetails) {
                this.destinationResponseDetails.add(
                    ((_item == null)
                        ? null
                        : _item.newCopyBuilder(this, destinationResponseDetailsPropertyTree, _propertyTreeUse))
                  );
              }
            }
          }
        } else {
          _storedValue = _other;
        }
      } else {
        _storedValue = null;
      }
    }

    public _B end() {
      return this._parentBuilder;
    }

    protected <_P extends ListOfDestinationResponseDetails> _P init(final _P _product) {
      if (this.destinationResponseDetails != null) {
        final List<DestinationResponseDetails> destinationResponseDetails = new ArrayList<>(
          this.destinationResponseDetails.size()
        );
        for (DestinationResponseDetails.Builder<
          ListOfDestinationResponseDetails.Builder<_B>
        > _item : this.destinationResponseDetails) {
          destinationResponseDetails.add(_item.build());
        }
        _product.destinationResponseDetails = destinationResponseDetails;
      }
      return _product;
    }

    /**
     * Adds the given items to the value of "destinationResponseDetails"
     *
     * @param destinationResponseDetails
     *     Items to add to the value of the "destinationResponseDetails" property
     */
    public ListOfDestinationResponseDetails.Builder<_B> addDestinationResponseDetails(
      final Iterable<? extends DestinationResponseDetails> destinationResponseDetails
    ) {
      if (destinationResponseDetails != null) {
        if (this.destinationResponseDetails == null) {
          this.destinationResponseDetails = new ArrayList<>();
        }
        for (DestinationResponseDetails _item : destinationResponseDetails) {
          this.destinationResponseDetails.add(new DestinationResponseDetails.Builder<>(this, _item, false));
        }
      }
      return this;
    }

    /**
     * Sets the new value of "destinationResponseDetails" (any previous value will be
     * replaced)
     *
     * @param destinationResponseDetails
     *     New value of the "destinationResponseDetails" property.
     */
    public ListOfDestinationResponseDetails.Builder<_B> withDestinationResponseDetails(
      final Iterable<? extends DestinationResponseDetails> destinationResponseDetails
    ) {
      if (this.destinationResponseDetails != null) {
        this.destinationResponseDetails.clear();
      }
      return addDestinationResponseDetails(destinationResponseDetails);
    }

    /**
     * Adds the given items to the value of "destinationResponseDetails"
     *
     * @param destinationResponseDetails
     *     Items to add to the value of the "destinationResponseDetails" property
     */
    public ListOfDestinationResponseDetails.Builder<_B> addDestinationResponseDetails(
      DestinationResponseDetails... destinationResponseDetails
    ) {
      addDestinationResponseDetails(Arrays.asList(destinationResponseDetails));
      return this;
    }

    /**
     * Sets the new value of "destinationResponseDetails" (any previous value will be
     * replaced)
     *
     * @param destinationResponseDetails
     *     New value of the "destinationResponseDetails" property.
     */
    public ListOfDestinationResponseDetails.Builder<_B> withDestinationResponseDetails(
      DestinationResponseDetails... destinationResponseDetails
    ) {
      withDestinationResponseDetails(Arrays.asList(destinationResponseDetails));
      return this;
    }

    /**
     * Returns a new builder to build an additional value of the
     * "DestinationResponseDetails" property.
     * Use {@link
     * org.etsi.uri._03221.x1._2017._10.DestinationResponseDetails.Builder#end()} to
     * return to the current builder.
     *
     * @return
     *     a new builder to build an additional value of the "DestinationResponseDetails"
     *     property.
     *     Use {@link
     *     org.etsi.uri._03221.x1._2017._10.DestinationResponseDetails.Builder#end()} to
     *     return to the current builder.
     */
    public DestinationResponseDetails.Builder<
      ? extends ListOfDestinationResponseDetails.Builder<_B>
    > addDestinationResponseDetails() {
      if (this.destinationResponseDetails == null) {
        this.destinationResponseDetails = new ArrayList<>();
      }
      final DestinationResponseDetails.Builder<
        ListOfDestinationResponseDetails.Builder<_B>
      > destinationResponseDetails_Builder = new DestinationResponseDetails.Builder<>(this, null, false);
      this.destinationResponseDetails.add(destinationResponseDetails_Builder);
      return destinationResponseDetails_Builder;
    }

    @Override
    public ListOfDestinationResponseDetails build() {
      if (_storedValue == null) {
        return this.init(new ListOfDestinationResponseDetails());
      } else {
        return ((ListOfDestinationResponseDetails) _storedValue);
      }
    }

    public ListOfDestinationResponseDetails.Builder<_B> copyOf(final ListOfDestinationResponseDetails _other) {
      _other.copyTo(this);
      return this;
    }

    public ListOfDestinationResponseDetails.Builder<_B> copyOf(final ListOfDestinationResponseDetails.Builder _other) {
      return copyOf(_other.build());
    }
  }
}
