//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.2
// See https://eclipse-ee4j.github.io/jaxb-ri
// Any modifications to this file will be lost upon recompilation of the source schema.
//

package org.etsi.uri._03221.x1._2017._10;

import com.kscs.util.jaxb.Buildable;
import com.kscs.util.jaxb.Copyable;
import com.kscs.util.jaxb.PartialCopyable;
import com.kscs.util.jaxb.PropertyTree;
import com.kscs.util.jaxb.PropertyTreeUse;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;
import java.util.HashMap;
import java.util.Map;
import javax.xml.datatype.XMLGregorianCalendar;

/**
 * <p>Java class for ListAllDetailsResponse complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>{@code
 * <complexType name="ListAllDetailsResponse">
 *   <complexContent>
 *     <extension base="{http://uri.etsi.org/03221/X1/2017/10}X1ResponseMessage">
 *       <sequence>
 *         <element name="ListOfXIDs" type="{http://uri.etsi.org/03221/X1/2017/10}ListOfXids"/>
 *         <element name="ListOfDIDs" type="{http://uri.etsi.org/03221/X1/2017/10}ListOfDids"/>
 *         <element name="ListOfGenericObjectIDs" type="{http://uri.etsi.org/03221/X1/2017/10}ListOfGenericObjectIDs" minOccurs="0"/>
 *       </sequence>
 *     </extension>
 *   </complexContent>
 * </complexType>
 * }</pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ListAllDetailsResponse", propOrder = { "listOfXIDs", "listOfDIDs", "listOfGenericObjectIDs" })
public class ListAllDetailsResponse extends X1ResponseMessage implements Copyable, PartialCopyable {

  @XmlElement(name = "ListOfXIDs", required = true)
  protected ListOfXids listOfXIDs;

  @XmlElement(name = "ListOfDIDs", required = true)
  protected ListOfDids listOfDIDs;

  @XmlElement(name = "ListOfGenericObjectIDs")
  protected ListOfGenericObjectIDs listOfGenericObjectIDs;

  /**
   * Generated by copy-constructor plugin, JAXB requires public no-arg constructor.
   *
   */
  public ListAllDetailsResponse() {
    // Generated by copy-constructor plugin, JAXB requires public no-arg constructor.
  }

  /**
   * Instantiates a ListAllDetailsResponse copying the state of another ListAllDetailsResponse
   *
   * @param _other
   *     The original ListAllDetailsResponse from which to copy state.
   */
  public ListAllDetailsResponse(final ListAllDetailsResponse _other) {
    super(_other);
    this.listOfXIDs = ((_other.listOfXIDs == null) ? null : _other.listOfXIDs.createCopy());
    this.listOfDIDs = ((_other.listOfDIDs == null) ? null : _other.listOfDIDs.createCopy());
    this.listOfGenericObjectIDs = ((_other.listOfGenericObjectIDs == null)
        ? null
        : _other.listOfGenericObjectIDs.createCopy());
  }

  /**
   * Instantiates a ListAllDetailsResponse copying the state of another ListAllDetailsResponse
   *
   * @param _other
   *     The original ListAllDetailsResponse from which to copy state.
   * @param _propertyTree
   *     A restricting {@link PropertyPath} that defines which nodes of the source object tree should actually be copied.
   * @param _propertyTreeUse
   *     Meaning of the {@link PropertyPath}: Exclude or include members contained in property path.
   */
  public ListAllDetailsResponse(
    final ListAllDetailsResponse _other,
    final PropertyTree _propertyTree,
    final PropertyTreeUse _propertyTreeUse
  ) {
    super(_other, _propertyTree, _propertyTreeUse);
    final PropertyTree listOfXIDsPropertyTree = ((_propertyTree == null) ? null : _propertyTree.get("listOfXIDs"));
    if (
      ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
          ? (listOfXIDsPropertyTree != null)
          : ((listOfXIDsPropertyTree == null) || (!listOfXIDsPropertyTree.isLeaf())))
    ) {
      this.listOfXIDs = ((_other.listOfXIDs == null)
          ? null
          : _other.listOfXIDs.createCopy(listOfXIDsPropertyTree, _propertyTreeUse));
    }
    final PropertyTree listOfDIDsPropertyTree = ((_propertyTree == null) ? null : _propertyTree.get("listOfDIDs"));
    if (
      ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
          ? (listOfDIDsPropertyTree != null)
          : ((listOfDIDsPropertyTree == null) || (!listOfDIDsPropertyTree.isLeaf())))
    ) {
      this.listOfDIDs = ((_other.listOfDIDs == null)
          ? null
          : _other.listOfDIDs.createCopy(listOfDIDsPropertyTree, _propertyTreeUse));
    }
    final PropertyTree listOfGenericObjectIDsPropertyTree =
      ((_propertyTree == null) ? null : _propertyTree.get("listOfGenericObjectIDs"));
    if (
      ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
          ? (listOfGenericObjectIDsPropertyTree != null)
          : ((listOfGenericObjectIDsPropertyTree == null) || (!listOfGenericObjectIDsPropertyTree.isLeaf())))
    ) {
      this.listOfGenericObjectIDs = ((_other.listOfGenericObjectIDs == null)
          ? null
          : _other.listOfGenericObjectIDs.createCopy(listOfGenericObjectIDsPropertyTree, _propertyTreeUse));
    }
  }

  /**
   * Gets the value of the listOfXIDs property.
   *
   * @return
   *     possible object is
   *     {@link ListOfXids }
   *
   */
  public ListOfXids getListOfXIDs() {
    return listOfXIDs;
  }

  /**
   * Sets the value of the listOfXIDs property.
   *
   * @param value
   *     allowed object is
   *     {@link ListOfXids }
   *
   */
  public void setListOfXIDs(ListOfXids value) {
    this.listOfXIDs = value;
  }

  /**
   * Gets the value of the listOfDIDs property.
   *
   * @return
   *     possible object is
   *     {@link ListOfDids }
   *
   */
  public ListOfDids getListOfDIDs() {
    return listOfDIDs;
  }

  /**
   * Sets the value of the listOfDIDs property.
   *
   * @param value
   *     allowed object is
   *     {@link ListOfDids }
   *
   */
  public void setListOfDIDs(ListOfDids value) {
    this.listOfDIDs = value;
  }

  /**
   * Gets the value of the listOfGenericObjectIDs property.
   *
   * @return
   *     possible object is
   *     {@link ListOfGenericObjectIDs }
   *
   */
  public ListOfGenericObjectIDs getListOfGenericObjectIDs() {
    return listOfGenericObjectIDs;
  }

  /**
   * Sets the value of the listOfGenericObjectIDs property.
   *
   * @param value
   *     allowed object is
   *     {@link ListOfGenericObjectIDs }
   *
   */
  public void setListOfGenericObjectIDs(ListOfGenericObjectIDs value) {
    this.listOfGenericObjectIDs = value;
  }

  @Override
  public ListAllDetailsResponse createCopy() {
    final ListAllDetailsResponse _newObject = ((ListAllDetailsResponse) super.createCopy());
    _newObject.listOfXIDs = ((this.listOfXIDs == null) ? null : this.listOfXIDs.createCopy());
    _newObject.listOfDIDs = ((this.listOfDIDs == null) ? null : this.listOfDIDs.createCopy());
    _newObject.listOfGenericObjectIDs = ((this.listOfGenericObjectIDs == null)
        ? null
        : this.listOfGenericObjectIDs.createCopy());
    return _newObject;
  }

  @Override
  public ListAllDetailsResponse createCopy(final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
    final ListAllDetailsResponse _newObject =
      ((ListAllDetailsResponse) super.createCopy(_propertyTree, _propertyTreeUse));
    final PropertyTree listOfXIDsPropertyTree = ((_propertyTree == null) ? null : _propertyTree.get("listOfXIDs"));
    if (
      ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
          ? (listOfXIDsPropertyTree != null)
          : ((listOfXIDsPropertyTree == null) || (!listOfXIDsPropertyTree.isLeaf())))
    ) {
      _newObject.listOfXIDs = ((this.listOfXIDs == null)
          ? null
          : this.listOfXIDs.createCopy(listOfXIDsPropertyTree, _propertyTreeUse));
    }
    final PropertyTree listOfDIDsPropertyTree = ((_propertyTree == null) ? null : _propertyTree.get("listOfDIDs"));
    if (
      ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
          ? (listOfDIDsPropertyTree != null)
          : ((listOfDIDsPropertyTree == null) || (!listOfDIDsPropertyTree.isLeaf())))
    ) {
      _newObject.listOfDIDs = ((this.listOfDIDs == null)
          ? null
          : this.listOfDIDs.createCopy(listOfDIDsPropertyTree, _propertyTreeUse));
    }
    final PropertyTree listOfGenericObjectIDsPropertyTree =
      ((_propertyTree == null) ? null : _propertyTree.get("listOfGenericObjectIDs"));
    if (
      ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
          ? (listOfGenericObjectIDsPropertyTree != null)
          : ((listOfGenericObjectIDsPropertyTree == null) || (!listOfGenericObjectIDsPropertyTree.isLeaf())))
    ) {
      _newObject.listOfGenericObjectIDs = ((this.listOfGenericObjectIDs == null)
          ? null
          : this.listOfGenericObjectIDs.createCopy(listOfGenericObjectIDsPropertyTree, _propertyTreeUse));
    }
    return _newObject;
  }

  @Override
  public ListAllDetailsResponse copyExcept(final PropertyTree _propertyTree) {
    return createCopy(_propertyTree, PropertyTreeUse.EXCLUDE);
  }

  @Override
  public ListAllDetailsResponse copyOnly(final PropertyTree _propertyTree) {
    return createCopy(_propertyTree, PropertyTreeUse.INCLUDE);
  }

  /**
   * Copies all state of this object to a builder. This method is used by the copyOf
   * method and should not be called directly by client code.
   *
   * @param _other
   *     A builder instance to which the state of this object will be copied.
   */
  public <_B> void copyTo(final ListAllDetailsResponse.Builder<_B> _other) {
    super.copyTo(_other);
    _other.listOfXIDs = ((this.listOfXIDs == null) ? null : this.listOfXIDs.newCopyBuilder(_other));
    _other.listOfDIDs = ((this.listOfDIDs == null) ? null : this.listOfDIDs.newCopyBuilder(_other));
    _other.listOfGenericObjectIDs = ((this.listOfGenericObjectIDs == null)
        ? null
        : this.listOfGenericObjectIDs.newCopyBuilder(_other));
  }

  @Override
  public <_B> ListAllDetailsResponse.Builder<_B> newCopyBuilder(final _B _parentBuilder) {
    return new ListAllDetailsResponse.Builder<_B>(_parentBuilder, this, true);
  }

  @Override
  public ListAllDetailsResponse.Builder<Void> newCopyBuilder() {
    return newCopyBuilder(null);
  }

  public static ListAllDetailsResponse.Builder<Void> builder() {
    return new ListAllDetailsResponse.Builder<>(null, null, false);
  }

  public static <_B> ListAllDetailsResponse.Builder<_B> copyOf(final X1ResponseMessage _other) {
    final ListAllDetailsResponse.Builder<_B> _newBuilder = new ListAllDetailsResponse.Builder<>(null, null, false);
    _other.copyTo(_newBuilder);
    return _newBuilder;
  }

  public static <_B> ListAllDetailsResponse.Builder<_B> copyOf(final ListAllDetailsResponse _other) {
    final ListAllDetailsResponse.Builder<_B> _newBuilder = new ListAllDetailsResponse.Builder<>(null, null, false);
    _other.copyTo(_newBuilder);
    return _newBuilder;
  }

  /**
   * Copies all state of this object to a builder. This method is used by the copyOf
   * method and should not be called directly by client code.
   *
   * @param _other
   *     A builder instance to which the state of this object will be copied.
   */
  public <_B> void copyTo(
    final ListAllDetailsResponse.Builder<_B> _other,
    final PropertyTree _propertyTree,
    final PropertyTreeUse _propertyTreeUse
  ) {
    super.copyTo(_other, _propertyTree, _propertyTreeUse);
    final PropertyTree listOfXIDsPropertyTree = ((_propertyTree == null) ? null : _propertyTree.get("listOfXIDs"));
    if (
      ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
          ? (listOfXIDsPropertyTree != null)
          : ((listOfXIDsPropertyTree == null) || (!listOfXIDsPropertyTree.isLeaf())))
    ) {
      _other.listOfXIDs = ((this.listOfXIDs == null)
          ? null
          : this.listOfXIDs.newCopyBuilder(_other, listOfXIDsPropertyTree, _propertyTreeUse));
    }
    final PropertyTree listOfDIDsPropertyTree = ((_propertyTree == null) ? null : _propertyTree.get("listOfDIDs"));
    if (
      ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
          ? (listOfDIDsPropertyTree != null)
          : ((listOfDIDsPropertyTree == null) || (!listOfDIDsPropertyTree.isLeaf())))
    ) {
      _other.listOfDIDs = ((this.listOfDIDs == null)
          ? null
          : this.listOfDIDs.newCopyBuilder(_other, listOfDIDsPropertyTree, _propertyTreeUse));
    }
    final PropertyTree listOfGenericObjectIDsPropertyTree =
      ((_propertyTree == null) ? null : _propertyTree.get("listOfGenericObjectIDs"));
    if (
      ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
          ? (listOfGenericObjectIDsPropertyTree != null)
          : ((listOfGenericObjectIDsPropertyTree == null) || (!listOfGenericObjectIDsPropertyTree.isLeaf())))
    ) {
      _other.listOfGenericObjectIDs = ((this.listOfGenericObjectIDs == null)
          ? null
          : this.listOfGenericObjectIDs.newCopyBuilder(_other, listOfGenericObjectIDsPropertyTree, _propertyTreeUse));
    }
  }

  @Override
  public <_B> ListAllDetailsResponse.Builder<_B> newCopyBuilder(
    final _B _parentBuilder,
    final PropertyTree _propertyTree,
    final PropertyTreeUse _propertyTreeUse
  ) {
    return new ListAllDetailsResponse.Builder<_B>(_parentBuilder, this, true, _propertyTree, _propertyTreeUse);
  }

  @Override
  public ListAllDetailsResponse.Builder<Void> newCopyBuilder(
    final PropertyTree _propertyTree,
    final PropertyTreeUse _propertyTreeUse
  ) {
    return newCopyBuilder(null, _propertyTree, _propertyTreeUse);
  }

  public static <_B> ListAllDetailsResponse.Builder<_B> copyOf(
    final X1ResponseMessage _other,
    final PropertyTree _propertyTree,
    final PropertyTreeUse _propertyTreeUse
  ) {
    final ListAllDetailsResponse.Builder<_B> _newBuilder = new ListAllDetailsResponse.Builder<>(null, null, false);
    _other.copyTo(_newBuilder, _propertyTree, _propertyTreeUse);
    return _newBuilder;
  }

  public static <_B> ListAllDetailsResponse.Builder<_B> copyOf(
    final ListAllDetailsResponse _other,
    final PropertyTree _propertyTree,
    final PropertyTreeUse _propertyTreeUse
  ) {
    final ListAllDetailsResponse.Builder<_B> _newBuilder = new ListAllDetailsResponse.Builder<>(null, null, false);
    _other.copyTo(_newBuilder, _propertyTree, _propertyTreeUse);
    return _newBuilder;
  }

  public static ListAllDetailsResponse.Builder<Void> copyExcept(
    final X1ResponseMessage _other,
    final PropertyTree _propertyTree
  ) {
    return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
  }

  public static ListAllDetailsResponse.Builder<Void> copyExcept(
    final ListAllDetailsResponse _other,
    final PropertyTree _propertyTree
  ) {
    return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
  }

  public static ListAllDetailsResponse.Builder<Void> copyOnly(
    final X1ResponseMessage _other,
    final PropertyTree _propertyTree
  ) {
    return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
  }

  public static ListAllDetailsResponse.Builder<Void> copyOnly(
    final ListAllDetailsResponse _other,
    final PropertyTree _propertyTree
  ) {
    return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
  }

  public static class Builder<_B> extends X1ResponseMessage.Builder<_B> implements Buildable {

    private ListOfXids.Builder<ListAllDetailsResponse.Builder<_B>> listOfXIDs;
    private ListOfDids.Builder<ListAllDetailsResponse.Builder<_B>> listOfDIDs;
    private ListOfGenericObjectIDs.Builder<ListAllDetailsResponse.Builder<_B>> listOfGenericObjectIDs;

    public Builder(final _B _parentBuilder, final ListAllDetailsResponse _other, final boolean _copy) {
      super(_parentBuilder, _other, _copy);
      if (_other != null) {
        this.listOfXIDs = ((_other.listOfXIDs == null) ? null : _other.listOfXIDs.newCopyBuilder(this));
        this.listOfDIDs = ((_other.listOfDIDs == null) ? null : _other.listOfDIDs.newCopyBuilder(this));
        this.listOfGenericObjectIDs = ((_other.listOfGenericObjectIDs == null)
            ? null
            : _other.listOfGenericObjectIDs.newCopyBuilder(this));
      }
    }

    public Builder(
      final _B _parentBuilder,
      final ListAllDetailsResponse _other,
      final boolean _copy,
      final PropertyTree _propertyTree,
      final PropertyTreeUse _propertyTreeUse
    ) {
      super(_parentBuilder, _other, _copy, _propertyTree, _propertyTreeUse);
      if (_other != null) {
        final PropertyTree listOfXIDsPropertyTree = ((_propertyTree == null) ? null : _propertyTree.get("listOfXIDs"));
        if (
          ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
              ? (listOfXIDsPropertyTree != null)
              : ((listOfXIDsPropertyTree == null) || (!listOfXIDsPropertyTree.isLeaf())))
        ) {
          this.listOfXIDs = ((_other.listOfXIDs == null)
              ? null
              : _other.listOfXIDs.newCopyBuilder(this, listOfXIDsPropertyTree, _propertyTreeUse));
        }
        final PropertyTree listOfDIDsPropertyTree = ((_propertyTree == null) ? null : _propertyTree.get("listOfDIDs"));
        if (
          ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
              ? (listOfDIDsPropertyTree != null)
              : ((listOfDIDsPropertyTree == null) || (!listOfDIDsPropertyTree.isLeaf())))
        ) {
          this.listOfDIDs = ((_other.listOfDIDs == null)
              ? null
              : _other.listOfDIDs.newCopyBuilder(this, listOfDIDsPropertyTree, _propertyTreeUse));
        }
        final PropertyTree listOfGenericObjectIDsPropertyTree =
          ((_propertyTree == null) ? null : _propertyTree.get("listOfGenericObjectIDs"));
        if (
          ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
              ? (listOfGenericObjectIDsPropertyTree != null)
              : ((listOfGenericObjectIDsPropertyTree == null) || (!listOfGenericObjectIDsPropertyTree.isLeaf())))
        ) {
          this.listOfGenericObjectIDs = ((_other.listOfGenericObjectIDs == null)
              ? null
              : _other.listOfGenericObjectIDs.newCopyBuilder(
                this,
                listOfGenericObjectIDsPropertyTree,
                _propertyTreeUse
              ));
        }
      }
    }

    protected <_P extends ListAllDetailsResponse> _P init(final _P _product) {
      _product.listOfXIDs = ((this.listOfXIDs == null) ? null : this.listOfXIDs.build());
      _product.listOfDIDs = ((this.listOfDIDs == null) ? null : this.listOfDIDs.build());
      _product.listOfGenericObjectIDs = ((this.listOfGenericObjectIDs == null)
          ? null
          : this.listOfGenericObjectIDs.build());
      return super.init(_product);
    }

    /**
     * Sets the new value of "listOfXIDs" (any previous value will be replaced)
     *
     * @param listOfXIDs
     *     New value of the "listOfXIDs" property.
     */
    public ListAllDetailsResponse.Builder<_B> withListOfXIDs(final ListOfXids listOfXIDs) {
      this.listOfXIDs = ((listOfXIDs == null) ? null : new ListOfXids.Builder<>(this, listOfXIDs, false));
      return this;
    }

    /**
     * Returns the existing builder or a new builder to build the value of the
     * "listOfXIDs" property.
     * Use {@link org.etsi.uri._03221.x1._2017._10.ListOfXids.Builder#end()} to return
     * to the current builder.
     *
     * @return
     *     A new builder to build the value of the "listOfXIDs" property.
     *     Use {@link org.etsi.uri._03221.x1._2017._10.ListOfXids.Builder#end()} to return
     *     to the current builder.
     */
    public ListOfXids.Builder<? extends ListAllDetailsResponse.Builder<_B>> withListOfXIDs() {
      if (this.listOfXIDs != null) {
        return this.listOfXIDs;
      }
      return this.listOfXIDs = new ListOfXids.Builder<>(this, null, false);
    }

    /**
     * Sets the new value of "listOfDIDs" (any previous value will be replaced)
     *
     * @param listOfDIDs
     *     New value of the "listOfDIDs" property.
     */
    public ListAllDetailsResponse.Builder<_B> withListOfDIDs(final ListOfDids listOfDIDs) {
      this.listOfDIDs = ((listOfDIDs == null) ? null : new ListOfDids.Builder<>(this, listOfDIDs, false));
      return this;
    }

    /**
     * Returns the existing builder or a new builder to build the value of the
     * "listOfDIDs" property.
     * Use {@link org.etsi.uri._03221.x1._2017._10.ListOfDids.Builder#end()} to return
     * to the current builder.
     *
     * @return
     *     A new builder to build the value of the "listOfDIDs" property.
     *     Use {@link org.etsi.uri._03221.x1._2017._10.ListOfDids.Builder#end()} to return
     *     to the current builder.
     */
    public ListOfDids.Builder<? extends ListAllDetailsResponse.Builder<_B>> withListOfDIDs() {
      if (this.listOfDIDs != null) {
        return this.listOfDIDs;
      }
      return this.listOfDIDs = new ListOfDids.Builder<>(this, null, false);
    }

    /**
     * Sets the new value of "listOfGenericObjectIDs" (any previous value will be
     * replaced)
     *
     * @param listOfGenericObjectIDs
     *     New value of the "listOfGenericObjectIDs" property.
     */
    public ListAllDetailsResponse.Builder<_B> withListOfGenericObjectIDs(
      final ListOfGenericObjectIDs listOfGenericObjectIDs
    ) {
      this.listOfGenericObjectIDs = ((listOfGenericObjectIDs == null)
          ? null
          : new ListOfGenericObjectIDs.Builder<>(this, listOfGenericObjectIDs, false));
      return this;
    }

    /**
     * Returns the existing builder or a new builder to build the value of the
     * "listOfGenericObjectIDs" property.
     * Use {@link
     * org.etsi.uri._03221.x1._2017._10.ListOfGenericObjectIDs.Builder#end()} to return
     * to the current builder.
     *
     * @return
     *     A new builder to build the value of the "listOfGenericObjectIDs" property.
     *     Use {@link
     *     org.etsi.uri._03221.x1._2017._10.ListOfGenericObjectIDs.Builder#end()} to return
     *     to the current builder.
     */
    public ListOfGenericObjectIDs.Builder<? extends ListAllDetailsResponse.Builder<_B>> withListOfGenericObjectIDs() {
      if (this.listOfGenericObjectIDs != null) {
        return this.listOfGenericObjectIDs;
      }
      return this.listOfGenericObjectIDs = new ListOfGenericObjectIDs.Builder<>(this, null, false);
    }

    /**
     * Sets the new value of "admfIdentifier" (any previous value will be replaced)
     *
     * @param admfIdentifier
     *     New value of the "admfIdentifier" property.
     */
    @Override
    public ListAllDetailsResponse.Builder<_B> withAdmfIdentifier(final String admfIdentifier) {
      super.withAdmfIdentifier(admfIdentifier);
      return this;
    }

    /**
     * Sets the new value of "neIdentifier" (any previous value will be replaced)
     *
     * @param neIdentifier
     *     New value of the "neIdentifier" property.
     */
    @Override
    public ListAllDetailsResponse.Builder<_B> withNeIdentifier(final String neIdentifier) {
      super.withNeIdentifier(neIdentifier);
      return this;
    }

    /**
     * Sets the new value of "messageTimestamp" (any previous value will be replaced)
     *
     * @param messageTimestamp
     *     New value of the "messageTimestamp" property.
     */
    @Override
    public ListAllDetailsResponse.Builder<_B> withMessageTimestamp(final XMLGregorianCalendar messageTimestamp) {
      super.withMessageTimestamp(messageTimestamp);
      return this;
    }

    /**
     * Sets the new value of "version" (any previous value will be replaced)
     *
     * @param version
     *     New value of the "version" property.
     */
    @Override
    public ListAllDetailsResponse.Builder<_B> withVersion(final String version) {
      super.withVersion(version);
      return this;
    }

    /**
     * Sets the new value of "x1TransactionId" (any previous value will be replaced)
     *
     * @param x1TransactionId
     *     New value of the "x1TransactionId" property.
     */
    @Override
    public ListAllDetailsResponse.Builder<_B> withX1TransactionId(final String x1TransactionId) {
      super.withX1TransactionId(x1TransactionId);
      return this;
    }

    @Override
    public ListAllDetailsResponse build() {
      if (_storedValue == null) {
        return this.init(new ListAllDetailsResponse());
      } else {
        return ((ListAllDetailsResponse) _storedValue);
      }
    }

    public ListAllDetailsResponse.Builder<_B> copyOf(final ListAllDetailsResponse _other) {
      _other.copyTo(this);
      return this;
    }

    public ListAllDetailsResponse.Builder<_B> copyOf(final ListAllDetailsResponse.Builder _other) {
      return copyOf(_other.build());
    }
  }

  public static class Select extends ListAllDetailsResponse.Selector<ListAllDetailsResponse.Select, Void> {

    Select() {
      super(null, null, null);
    }

    public static ListAllDetailsResponse.Select _root() {
      return new ListAllDetailsResponse.Select();
    }
  }

  public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?>, TParent>
    extends X1ResponseMessage.Selector<TRoot, TParent> {

    private ListOfXids.Selector<TRoot, ListAllDetailsResponse.Selector<TRoot, TParent>> listOfXIDs = null;
    private ListOfDids.Selector<TRoot, ListAllDetailsResponse.Selector<TRoot, TParent>> listOfDIDs = null;
    private ListOfGenericObjectIDs.Selector<
      TRoot,
      ListAllDetailsResponse.Selector<TRoot, TParent>
    > listOfGenericObjectIDs = null;

    public Selector(final TRoot root, final TParent parent, final String propertyName) {
      super(root, parent, propertyName);
    }

    @Override
    public Map<String, PropertyTree> buildChildren() {
      final Map<String, PropertyTree> products = new HashMap<>();
      products.putAll(super.buildChildren());
      if (this.listOfXIDs != null) {
        products.put("listOfXIDs", this.listOfXIDs.init());
      }
      if (this.listOfDIDs != null) {
        products.put("listOfDIDs", this.listOfDIDs.init());
      }
      if (this.listOfGenericObjectIDs != null) {
        products.put("listOfGenericObjectIDs", this.listOfGenericObjectIDs.init());
      }
      return products;
    }

    public ListOfXids.Selector<TRoot, ListAllDetailsResponse.Selector<TRoot, TParent>> listOfXIDs() {
      return (
        (this.listOfXIDs == null)
          ? this.listOfXIDs = new ListOfXids.Selector<>(this._root, this, "listOfXIDs")
          : this.listOfXIDs
      );
    }

    public ListOfDids.Selector<TRoot, ListAllDetailsResponse.Selector<TRoot, TParent>> listOfDIDs() {
      return (
        (this.listOfDIDs == null)
          ? this.listOfDIDs = new ListOfDids.Selector<>(this._root, this, "listOfDIDs")
          : this.listOfDIDs
      );
    }

    public ListOfGenericObjectIDs.Selector<
      TRoot,
      ListAllDetailsResponse.Selector<TRoot, TParent>
    > listOfGenericObjectIDs() {
      return (
        (this.listOfGenericObjectIDs == null)
          ? this.listOfGenericObjectIDs = new ListOfGenericObjectIDs.Selector<>(
            this._root,
            this,
            "listOfGenericObjectIDs"
          )
          : this.listOfGenericObjectIDs
      );
    }
  }
}
