//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.2
// See https://eclipse-ee4j.github.io/jaxb-ri
// Any modifications to this file will be lost upon recompilation of the source schema.
//

package org.etsi.uri._03221.x1._2017._10;

import com.kscs.util.jaxb.Buildable;
import com.kscs.util.jaxb.Copyable;
import com.kscs.util.jaxb.PartialCopyable;
import com.kscs.util.jaxb.PropertyTree;
import com.kscs.util.jaxb.PropertyTreeUse;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;
import java.util.HashMap;
import java.util.Map;

/**
 * <p>Java class for DestinationResponseDetails complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>{@code
 * <complexType name="DestinationResponseDetails">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="destinationDetails" type="{http://uri.etsi.org/03221/X1/2017/10}DestinationDetails"/>
 *         <element name="destinationStatus" type="{http://uri.etsi.org/03221/X1/2017/10}DestinationStatus"/>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DestinationResponseDetails", propOrder = { "destinationDetails", "destinationStatus" })
public class DestinationResponseDetails implements Copyable, PartialCopyable {

  @XmlElement(required = true)
  protected DestinationDetails destinationDetails;

  @XmlElement(required = true)
  protected DestinationStatus destinationStatus;

  /**
   * Generated by copy-constructor plugin, JAXB requires public no-arg constructor.
   *
   */
  public DestinationResponseDetails() {
    // Generated by copy-constructor plugin, JAXB requires public no-arg constructor.
  }

  /**
   * Instantiates a DestinationResponseDetails copying the state of another DestinationResponseDetails
   *
   * @param _other
   *     The original DestinationResponseDetails from which to copy state.
   */
  public DestinationResponseDetails(final DestinationResponseDetails _other) {
    this.destinationDetails = ((_other.destinationDetails == null) ? null : _other.destinationDetails.createCopy());
    this.destinationStatus = ((_other.destinationStatus == null) ? null : _other.destinationStatus.createCopy());
  }

  /**
   * Instantiates a DestinationResponseDetails copying the state of another DestinationResponseDetails
   *
   * @param _other
   *     The original DestinationResponseDetails from which to copy state.
   * @param _propertyTree
   *     A restricting {@link PropertyPath} that defines which nodes of the source object tree should actually be copied.
   * @param _propertyTreeUse
   *     Meaning of the {@link PropertyPath}: Exclude or include members contained in property path.
   */
  public DestinationResponseDetails(
    final DestinationResponseDetails _other,
    final PropertyTree _propertyTree,
    final PropertyTreeUse _propertyTreeUse
  ) {
    final PropertyTree destinationDetailsPropertyTree =
      ((_propertyTree == null) ? null : _propertyTree.get("destinationDetails"));
    if (
      ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
          ? (destinationDetailsPropertyTree != null)
          : ((destinationDetailsPropertyTree == null) || (!destinationDetailsPropertyTree.isLeaf())))
    ) {
      this.destinationDetails = ((_other.destinationDetails == null)
          ? null
          : _other.destinationDetails.createCopy(destinationDetailsPropertyTree, _propertyTreeUse));
    }
    final PropertyTree destinationStatusPropertyTree =
      ((_propertyTree == null) ? null : _propertyTree.get("destinationStatus"));
    if (
      ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
          ? (destinationStatusPropertyTree != null)
          : ((destinationStatusPropertyTree == null) || (!destinationStatusPropertyTree.isLeaf())))
    ) {
      this.destinationStatus = ((_other.destinationStatus == null)
          ? null
          : _other.destinationStatus.createCopy(destinationStatusPropertyTree, _propertyTreeUse));
    }
  }

  /**
   * Gets the value of the destinationDetails property.
   *
   * @return
   *     possible object is
   *     {@link DestinationDetails }
   *
   */
  public DestinationDetails getDestinationDetails() {
    return destinationDetails;
  }

  /**
   * Sets the value of the destinationDetails property.
   *
   * @param value
   *     allowed object is
   *     {@link DestinationDetails }
   *
   */
  public void setDestinationDetails(DestinationDetails value) {
    this.destinationDetails = value;
  }

  /**
   * Gets the value of the destinationStatus property.
   *
   * @return
   *     possible object is
   *     {@link DestinationStatus }
   *
   */
  public DestinationStatus getDestinationStatus() {
    return destinationStatus;
  }

  /**
   * Sets the value of the destinationStatus property.
   *
   * @param value
   *     allowed object is
   *     {@link DestinationStatus }
   *
   */
  public void setDestinationStatus(DestinationStatus value) {
    this.destinationStatus = value;
  }

  @Override
  public DestinationResponseDetails createCopy() {
    final DestinationResponseDetails _newObject;
    try {
      _newObject = ((DestinationResponseDetails) super.clone());
    } catch (CloneNotSupportedException e) {
      throw new RuntimeException(e);
    }
    _newObject.destinationDetails = ((this.destinationDetails == null) ? null : this.destinationDetails.createCopy());
    _newObject.destinationStatus = ((this.destinationStatus == null) ? null : this.destinationStatus.createCopy());
    return _newObject;
  }

  @Override
  public DestinationResponseDetails createCopy(
    final PropertyTree _propertyTree,
    final PropertyTreeUse _propertyTreeUse
  ) {
    final DestinationResponseDetails _newObject;
    try {
      _newObject = ((DestinationResponseDetails) super.clone());
    } catch (CloneNotSupportedException e) {
      throw new RuntimeException(e);
    }
    final PropertyTree destinationDetailsPropertyTree =
      ((_propertyTree == null) ? null : _propertyTree.get("destinationDetails"));
    if (
      ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
          ? (destinationDetailsPropertyTree != null)
          : ((destinationDetailsPropertyTree == null) || (!destinationDetailsPropertyTree.isLeaf())))
    ) {
      _newObject.destinationDetails = ((this.destinationDetails == null)
          ? null
          : this.destinationDetails.createCopy(destinationDetailsPropertyTree, _propertyTreeUse));
    }
    final PropertyTree destinationStatusPropertyTree =
      ((_propertyTree == null) ? null : _propertyTree.get("destinationStatus"));
    if (
      ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
          ? (destinationStatusPropertyTree != null)
          : ((destinationStatusPropertyTree == null) || (!destinationStatusPropertyTree.isLeaf())))
    ) {
      _newObject.destinationStatus = ((this.destinationStatus == null)
          ? null
          : this.destinationStatus.createCopy(destinationStatusPropertyTree, _propertyTreeUse));
    }
    return _newObject;
  }

  @Override
  public DestinationResponseDetails copyExcept(final PropertyTree _propertyTree) {
    return createCopy(_propertyTree, PropertyTreeUse.EXCLUDE);
  }

  @Override
  public DestinationResponseDetails copyOnly(final PropertyTree _propertyTree) {
    return createCopy(_propertyTree, PropertyTreeUse.INCLUDE);
  }

  /**
   * Copies all state of this object to a builder. This method is used by the copyOf
   * method and should not be called directly by client code.
   *
   * @param _other
   *     A builder instance to which the state of this object will be copied.
   */
  public <_B> void copyTo(final DestinationResponseDetails.Builder<_B> _other) {
    _other.destinationDetails = ((this.destinationDetails == null)
        ? null
        : this.destinationDetails.newCopyBuilder(_other));
    _other.destinationStatus = ((this.destinationStatus == null)
        ? null
        : this.destinationStatus.newCopyBuilder(_other));
  }

  public <_B> DestinationResponseDetails.Builder<_B> newCopyBuilder(final _B _parentBuilder) {
    return new DestinationResponseDetails.Builder<_B>(_parentBuilder, this, true);
  }

  public DestinationResponseDetails.Builder<Void> newCopyBuilder() {
    return newCopyBuilder(null);
  }

  public static DestinationResponseDetails.Builder<Void> builder() {
    return new DestinationResponseDetails.Builder<>(null, null, false);
  }

  public static <_B> DestinationResponseDetails.Builder<_B> copyOf(final DestinationResponseDetails _other) {
    final DestinationResponseDetails.Builder<_B> _newBuilder = new DestinationResponseDetails.Builder<>(
      null,
      null,
      false
    );
    _other.copyTo(_newBuilder);
    return _newBuilder;
  }

  /**
   * Copies all state of this object to a builder. This method is used by the copyOf
   * method and should not be called directly by client code.
   *
   * @param _other
   *     A builder instance to which the state of this object will be copied.
   */
  public <_B> void copyTo(
    final DestinationResponseDetails.Builder<_B> _other,
    final PropertyTree _propertyTree,
    final PropertyTreeUse _propertyTreeUse
  ) {
    final PropertyTree destinationDetailsPropertyTree =
      ((_propertyTree == null) ? null : _propertyTree.get("destinationDetails"));
    if (
      ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
          ? (destinationDetailsPropertyTree != null)
          : ((destinationDetailsPropertyTree == null) || (!destinationDetailsPropertyTree.isLeaf())))
    ) {
      _other.destinationDetails = ((this.destinationDetails == null)
          ? null
          : this.destinationDetails.newCopyBuilder(_other, destinationDetailsPropertyTree, _propertyTreeUse));
    }
    final PropertyTree destinationStatusPropertyTree =
      ((_propertyTree == null) ? null : _propertyTree.get("destinationStatus"));
    if (
      ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
          ? (destinationStatusPropertyTree != null)
          : ((destinationStatusPropertyTree == null) || (!destinationStatusPropertyTree.isLeaf())))
    ) {
      _other.destinationStatus = ((this.destinationStatus == null)
          ? null
          : this.destinationStatus.newCopyBuilder(_other, destinationStatusPropertyTree, _propertyTreeUse));
    }
  }

  public <_B> DestinationResponseDetails.Builder<_B> newCopyBuilder(
    final _B _parentBuilder,
    final PropertyTree _propertyTree,
    final PropertyTreeUse _propertyTreeUse
  ) {
    return new DestinationResponseDetails.Builder<_B>(_parentBuilder, this, true, _propertyTree, _propertyTreeUse);
  }

  public DestinationResponseDetails.Builder<Void> newCopyBuilder(
    final PropertyTree _propertyTree,
    final PropertyTreeUse _propertyTreeUse
  ) {
    return newCopyBuilder(null, _propertyTree, _propertyTreeUse);
  }

  public static <_B> DestinationResponseDetails.Builder<_B> copyOf(
    final DestinationResponseDetails _other,
    final PropertyTree _propertyTree,
    final PropertyTreeUse _propertyTreeUse
  ) {
    final DestinationResponseDetails.Builder<_B> _newBuilder = new DestinationResponseDetails.Builder<>(
      null,
      null,
      false
    );
    _other.copyTo(_newBuilder, _propertyTree, _propertyTreeUse);
    return _newBuilder;
  }

  public static DestinationResponseDetails.Builder<Void> copyExcept(
    final DestinationResponseDetails _other,
    final PropertyTree _propertyTree
  ) {
    return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
  }

  public static DestinationResponseDetails.Builder<Void> copyOnly(
    final DestinationResponseDetails _other,
    final PropertyTree _propertyTree
  ) {
    return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
  }

  public static class Builder<_B> implements Buildable {

    protected final _B _parentBuilder;
    protected final DestinationResponseDetails _storedValue;
    private DestinationDetails.Builder<DestinationResponseDetails.Builder<_B>> destinationDetails;
    private DestinationStatus.Builder<DestinationResponseDetails.Builder<_B>> destinationStatus;

    public Builder(final _B _parentBuilder, final DestinationResponseDetails _other, final boolean _copy) {
      this._parentBuilder = _parentBuilder;
      if (_other != null) {
        if (_copy) {
          _storedValue = null;
          this.destinationDetails = ((_other.destinationDetails == null)
              ? null
              : _other.destinationDetails.newCopyBuilder(this));
          this.destinationStatus = ((_other.destinationStatus == null)
              ? null
              : _other.destinationStatus.newCopyBuilder(this));
        } else {
          _storedValue = _other;
        }
      } else {
        _storedValue = null;
      }
    }

    public Builder(
      final _B _parentBuilder,
      final DestinationResponseDetails _other,
      final boolean _copy,
      final PropertyTree _propertyTree,
      final PropertyTreeUse _propertyTreeUse
    ) {
      this._parentBuilder = _parentBuilder;
      if (_other != null) {
        if (_copy) {
          _storedValue = null;
          final PropertyTree destinationDetailsPropertyTree =
            ((_propertyTree == null) ? null : _propertyTree.get("destinationDetails"));
          if (
            ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
                ? (destinationDetailsPropertyTree != null)
                : ((destinationDetailsPropertyTree == null) || (!destinationDetailsPropertyTree.isLeaf())))
          ) {
            this.destinationDetails = ((_other.destinationDetails == null)
                ? null
                : _other.destinationDetails.newCopyBuilder(this, destinationDetailsPropertyTree, _propertyTreeUse));
          }
          final PropertyTree destinationStatusPropertyTree =
            ((_propertyTree == null) ? null : _propertyTree.get("destinationStatus"));
          if (
            ((_propertyTreeUse == PropertyTreeUse.INCLUDE)
                ? (destinationStatusPropertyTree != null)
                : ((destinationStatusPropertyTree == null) || (!destinationStatusPropertyTree.isLeaf())))
          ) {
            this.destinationStatus = ((_other.destinationStatus == null)
                ? null
                : _other.destinationStatus.newCopyBuilder(this, destinationStatusPropertyTree, _propertyTreeUse));
          }
        } else {
          _storedValue = _other;
        }
      } else {
        _storedValue = null;
      }
    }

    public _B end() {
      return this._parentBuilder;
    }

    protected <_P extends DestinationResponseDetails> _P init(final _P _product) {
      _product.destinationDetails = ((this.destinationDetails == null) ? null : this.destinationDetails.build());
      _product.destinationStatus = ((this.destinationStatus == null) ? null : this.destinationStatus.build());
      return _product;
    }

    /**
     * Sets the new value of "destinationDetails" (any previous value will be replaced)
     *
     * @param destinationDetails
     *     New value of the "destinationDetails" property.
     */
    public DestinationResponseDetails.Builder<_B> withDestinationDetails(final DestinationDetails destinationDetails) {
      this.destinationDetails = ((destinationDetails == null)
          ? null
          : new DestinationDetails.Builder<>(this, destinationDetails, false));
      return this;
    }

    /**
     * Returns the existing builder or a new builder to build the value of the
     * "destinationDetails" property.
     * Use {@link org.etsi.uri._03221.x1._2017._10.DestinationDetails.Builder#end()} to
     * return to the current builder.
     *
     * @return
     *     A new builder to build the value of the "destinationDetails" property.
     *     Use {@link org.etsi.uri._03221.x1._2017._10.DestinationDetails.Builder#end()} to
     *     return to the current builder.
     */
    public DestinationDetails.Builder<? extends DestinationResponseDetails.Builder<_B>> withDestinationDetails() {
      if (this.destinationDetails != null) {
        return this.destinationDetails;
      }
      return this.destinationDetails = new DestinationDetails.Builder<>(this, null, false);
    }

    /**
     * Sets the new value of "destinationStatus" (any previous value will be replaced)
     *
     * @param destinationStatus
     *     New value of the "destinationStatus" property.
     */
    public DestinationResponseDetails.Builder<_B> withDestinationStatus(final DestinationStatus destinationStatus) {
      this.destinationStatus = ((destinationStatus == null)
          ? null
          : new DestinationStatus.Builder<>(this, destinationStatus, false));
      return this;
    }

    /**
     * Returns the existing builder or a new builder to build the value of the
     * "destinationStatus" property.
     * Use {@link org.etsi.uri._03221.x1._2017._10.DestinationStatus.Builder#end()} to
     * return to the current builder.
     *
     * @return
     *     A new builder to build the value of the "destinationStatus" property.
     *     Use {@link org.etsi.uri._03221.x1._2017._10.DestinationStatus.Builder#end()} to
     *     return to the current builder.
     */
    public DestinationStatus.Builder<? extends DestinationResponseDetails.Builder<_B>> withDestinationStatus() {
      if (this.destinationStatus != null) {
        return this.destinationStatus;
      }
      return this.destinationStatus = new DestinationStatus.Builder<>(this, null, false);
    }

    @Override
    public DestinationResponseDetails build() {
      if (_storedValue == null) {
        return this.init(new DestinationResponseDetails());
      } else {
        return ((DestinationResponseDetails) _storedValue);
      }
    }

    public DestinationResponseDetails.Builder<_B> copyOf(final DestinationResponseDetails _other) {
      _other.copyTo(this);
      return this;
    }

    public DestinationResponseDetails.Builder<_B> copyOf(final DestinationResponseDetails.Builder _other) {
      return copyOf(_other.build());
    }
  }

  public static class Select extends DestinationResponseDetails.Selector<DestinationResponseDetails.Select, Void> {

    Select() {
      super(null, null, null);
    }

    public static DestinationResponseDetails.Select _root() {
      return new DestinationResponseDetails.Select();
    }
  }

  public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?>, TParent>
    extends com.kscs.util.jaxb.Selector<TRoot, TParent> {

    private DestinationDetails.Selector<TRoot, DestinationResponseDetails.Selector<TRoot, TParent>> destinationDetails =
      null;
    private DestinationStatus.Selector<TRoot, DestinationResponseDetails.Selector<TRoot, TParent>> destinationStatus =
      null;

    public Selector(final TRoot root, final TParent parent, final String propertyName) {
      super(root, parent, propertyName);
    }

    @Override
    public Map<String, PropertyTree> buildChildren() {
      final Map<String, PropertyTree> products = new HashMap<>();
      products.putAll(super.buildChildren());
      if (this.destinationDetails != null) {
        products.put("destinationDetails", this.destinationDetails.init());
      }
      if (this.destinationStatus != null) {
        products.put("destinationStatus", this.destinationStatus.init());
      }
      return products;
    }

    public DestinationDetails.Selector<
      TRoot,
      DestinationResponseDetails.Selector<TRoot, TParent>
    > destinationDetails() {
      return (
        (this.destinationDetails == null)
          ? this.destinationDetails = new DestinationDetails.Selector<>(this._root, this, "destinationDetails")
          : this.destinationDetails
      );
    }

    public DestinationStatus.Selector<TRoot, DestinationResponseDetails.Selector<TRoot, TParent>> destinationStatus() {
      return (
        (this.destinationStatus == null)
          ? this.destinationStatus = new DestinationStatus.Selector<>(this._root, this, "destinationStatus")
          : this.destinationStatus
      );
    }
  }
}
